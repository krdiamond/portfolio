@import '_variables.scss'; 

.main-border {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: 10px solid $blue;
    margin: 20px;
    z-index: 9999;
    color: $blue;
    text-align: center;
    min-width: 160px;
}

.container {
  position: relative;
  overflow-x: hidden;
  width: 100%;
  height: 100%;
}

h1 {
  font-family: 'Archivo-Black', Arial, sans-serif;
  letter-spacing: 0.22em;
  line-height: 1;
  margin: 0;
  padding: 3px 0px 10px 7px;
  font-size: 18px;
  @media screen and (min-width: $break--min) and (max-width: $break--tblt) {
      font-size: calc(18px + (99 - 18) * ((100vw - 200px) / (768 - 200)));
  }
  @media screen and (min-width: $break--tblt) and (max-width: $break--dsktp--lg){
      padding: 20px;
      font-size: calc(95px + (191 - 95) * ((100vw - 768px) / (1440 - 768)));
  }
  @media screen and (min-width: $break--dsktp--lg){
      padding: 20px;
      font-size: calc(191px + (271 - 191) * ((100vw - 1440px) / (2000 - 1440)));
  }
}

h2 {
  font-family: 'Alata-Regular', Arial, sans-serif;
  font-size: 8px;
  @media screen and (min-width: $break--min) and (max-width: $break--tblt) {
      font-size: calc(8px + (40 - 8) * ((100vw - 200px) / (768 - 200)));
  }
  @media screen and (min-width: $break--tblt) and (max-width: $break--dsktp--lg){
      font-size: calc(40px + (77 - 40) * ((100vw - 768px) / (1440 - 768)));
  }
  @media screen and (min-width: $break--dsktp--lg){
      font-size: calc(77px + (108 - 77) * ((100vw - 1440px) / (2000 - 1440)));
  }
}

h3 {
  font-family: 'Alata-Regular', Arial, sans-serif;
  font-size: 55px;
  margin: 0;
  @media screen and (min-width: 351px) and (max-width: $break--tblt) {
    padding: 20px;
    font-size: calc(55px + (68 - 55) * ((100vw - 350px) / (768 - 350)));
  }
  @media screen and (min-width: $break--tblt) and (max-width: $break--dsktp--lg){
    padding: 20px;
    font-size: calc(68px + (150 - 68) * ((100vw - 768px) / (1440 - 768)));
  }
  @media screen and (min-width: $break--dsktp--lg){
    padding: 20px;
    font-size: calc(150px + (180 - 150) * ((100vw - 1440px) / (2000 - 1440)));
  }
  .icon-link {
    width: 20px;
    height: 20px;
    font-size: 30px;
    @media screen and (min-width: $break--min) and (max-width: 350px) {
      font-size: calc(30px + (50 - 30) * ((100vw - 200px) / (350 - 200)));
      width: calc(20px + (30 - 20) * ((100vw - 200px) / (350 - 200)));
      height: calc(20px + (30 - 20) * ((100vw - 200px) / (350 - 200)));
    }
    @media screen and (min-width: 351px) and (max-width: $break--tblt) {
      padding: 10px;
      font-size: calc(50px + (68 - 50) * ((100vw - 351px) / (768 - 351)));
      height: calc(30px + (80 - 30) * ((100vw - 351px) / (768 - 351)));
      width: calc(30px + (80 - 30) * ((100vw - 351px) / (768 - 351)));
    }
    @media screen and (min-width: $break--tblt) and (max-width: $break--dsktp--lg){
      padding: 10px;
      font-size: calc(68px + (88 - 68) * ((100vw - 768px) / (1440 - 768)));
      height: calc(80px + (120 - 80) * ((100vw - 768px) / (1440 - 768)));
      width: calc(80px + (120 - 80) * ((100vw - 768px) / (1440 - 768)));
    }
    @media screen and (min-width: $break--dsktp--lg){
      padding: 10px;
      font-size: calc(88px + (108 - 88) * ((100vw - 1440px) / (2000 - 1440)));
      height: calc(120px + (160 - 120) * ((100vw - 1440px) / (2000 - 1440)));
      width: calc(120px + (160 - 120) * ((100vw - 1440px) / (2000 - 1440)));
    }
  }
}


.twinkles {
  @media screen and (max-width: 350px) {
    display: none;
  }
}


.blob-btn {
  $numOfBlobs: 4;
  position: relative;
  color: $blue;
  font-size: 16px;
  font-weight: bold;
  background-color: transparent;
  outline: none;
  border: none;
  transition: color 0.5s;
  cursor: pointer;
  padding: 20px;
  width: 240px;
  margin: 24px;
  @media screen and (min-width: $break--min) and (max-width: $break--tblt) {
    width: calc(240px + (400 - 240) * ((100vw - 380px) / (768 - 351)));
    font-size: calc(16px + (18 - 16) * ((100vw - 380px) / (768 - 351)));
  }
  @media screen and (min-width: $break--tblt) and (max-width: $break--dsktp--lg){
    margin-top: 60px;
    width: calc(400px + (600 - 400) * ((100vw - 768px) / (1440 - 768)));
    font-size: calc(18px + (34 - 18) * ((100vw - 768px) / (1440 - 768)));
  }
  @media screen and (min-width: $break--dsktp--lg){
    margin-top: 100px;
    width: calc(600px + (800 - 600) * ((100vw - 1440px) / (2000 - 1440)));
    font-size: calc(34px + (42 - 34) * ((100vw - 1440px) / (2000 - 1440)));
    
  }
  
  &:before {
    content: "";
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border: 5px solid $blue;
    border-radius:30px;
  }
  
  &:after {
    content: "";
    z-index: -2;
    position: absolute;
    left: 5px*1.5;
    top: 5px*1.5;
    width: 100%;
    height: 100%;

    transition: all 0.3s 0.2s;
    border-radius:30px;
  }
  
  &:hover {
    color: white;
    border-radius:30px;
    
    &:after {
      transition: all 0.3s;
      left: 0;
      top: 0;
      border-radius:30px;
    }
  }
  
  &__inner {
    z-index: -1;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius:30px;
    background:white;
  }
  
  // additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
  &__blobs {
    position: relative;
    display: block;
    height: 100%;
    filter: url('#goo');
  }
  
  &__blob {
    position: absolute;
    top: 5px;
    width: 100% / $numOfBlobs;
    height: 100%;
    background: $blue;
    border-radius: 100%;
    transform: translate3d(0,150%,0) scale(1.7);
    transition: transform 0.45s;
    
    @supports(filter: url('#goo')) {
      transform: translate3d(0,150%,0) scale(1.4);
    }
    
    @for $i from 1 through $numOfBlobs {
      &:nth-child(#{$i}) {
        left: ($i - 1) * (120% / $numOfBlobs);
        transition-delay: ($i - 1) * 0.08s;
      }
    }
    
    .blob-btn:hover & {
      transform: translateZ(0) scale(1.7);
      
      @supports(filter: url('#goo')) {
        transform: translateZ(0) scale(1.4);
      }
    }
  }
  
}
